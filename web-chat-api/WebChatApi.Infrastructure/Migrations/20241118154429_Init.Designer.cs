// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebChatApi.Infrastructure.Database;

#nullable disable

namespace WebChatApi.Infrastructure.Migrations
{
    [DbContext(typeof(WebChatApiInternalContext))]
    [Migration("20241118154429_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UserDbo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("text")
                        .HasColumnName("avatar_url");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("city");

                    b.Property<string>("CurrentStatus")
                        .HasColumnType("text")
                        .HasColumnName("current_status");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("description");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("GitHubUrl")
                        .HasColumnType("text")
                        .HasColumnName("git_hub_url");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("last_name");

                    b.Property<DateTime>("LastOnline")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_online");

                    b.Property<string>("LinkedInUrl")
                        .HasColumnType("text")
                        .HasColumnName("linked_in_url");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<List<string>>("Stack")
                        .IsRequired()
                        .HasColumnType("text[]")
                        .HasColumnName("stack");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users");
                });

            modelBuilder.Entity("WebChatApi.Domain.Dbos.ChannelDbo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("text")
                        .HasColumnName("avatar_url");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatorId")
                        .HasColumnType("integer")
                        .HasColumnName("creator_id");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_channels");

                    b.HasIndex("CreatorId")
                        .HasDatabaseName("ix_channels_creator_id");

                    b.ToTable("channels");
                });

            modelBuilder.Entity("WebChatApi.Domain.Dbos.ChannelMessageDbo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer")
                        .HasColumnName("author_id");

                    b.Property<int>("ChannelId")
                        .HasColumnType("integer")
                        .HasColumnName("channel_id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("EditedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("edited_at");

                    b.Property<bool>("IsEdited")
                        .HasColumnType("boolean")
                        .HasColumnName("is_edited");

                    b.HasKey("Id")
                        .HasName("pk_channel_messages");

                    b.HasIndex("AuthorId")
                        .HasDatabaseName("ix_channel_messages_author_id");

                    b.HasIndex("ChannelId")
                        .HasDatabaseName("ix_channel_messages_channel_id");

                    b.ToTable("channel_messages");
                });

            modelBuilder.Entity("WebChatApi.Domain.Dbos.ChannelUserDbo", b =>
                {
                    b.Property<int>("ChannelId")
                        .HasColumnType("integer")
                        .HasColumnName("channel_id");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean")
                        .HasColumnName("is_admin");

                    b.HasKey("ChannelId", "UserId")
                        .HasName("pk_channel_users");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_channel_users_user_id");

                    b.ToTable("channel_users");
                });

            modelBuilder.Entity("WebChatApi.Domain.Dbos.GroupChatDbo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("text")
                        .HasColumnName("avatar_url");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatorId")
                        .HasColumnType("integer")
                        .HasColumnName("creator_id");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_group_chats");

                    b.HasIndex("CreatorId")
                        .HasDatabaseName("ix_group_chats_creator_id");

                    b.ToTable("group_chats");
                });

            modelBuilder.Entity("WebChatApi.Domain.Dbos.GroupChatMessageDbo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer")
                        .HasColumnName("author_id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("EditedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("edited_at");

                    b.Property<int>("GroupChatId")
                        .HasColumnType("integer")
                        .HasColumnName("group_chat_id");

                    b.Property<bool>("IsEdited")
                        .HasColumnType("boolean")
                        .HasColumnName("is_edited");

                    b.HasKey("Id")
                        .HasName("pk_group_chat_messages");

                    b.HasIndex("AuthorId")
                        .HasDatabaseName("ix_group_chat_messages_author_id");

                    b.HasIndex("GroupChatId")
                        .HasDatabaseName("ix_group_chat_messages_group_chat_id");

                    b.ToTable("group_chat_messages");
                });

            modelBuilder.Entity("WebChatApi.Domain.Dbos.GroupChatUserDbo", b =>
                {
                    b.Property<int>("GroupChatId")
                        .HasColumnType("integer")
                        .HasColumnName("group_chat_id");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("GroupChatId", "UserId")
                        .HasName("pk_group_chat_users");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_group_chat_users_user_id");

                    b.ToTable("group_chat_users");
                });

            modelBuilder.Entity("WebChatApi.Domain.Dbos.PersonalMessageDbo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer")
                        .HasColumnName("author_id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("EditedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("edited_at");

                    b.Property<bool>("IsEdited")
                        .HasColumnType("boolean")
                        .HasColumnName("is_edited");

                    b.Property<int>("RecipientId")
                        .HasColumnType("integer")
                        .HasColumnName("recipient_id");

                    b.HasKey("Id")
                        .HasName("pk_personal_messages");

                    b.HasIndex("AuthorId")
                        .HasDatabaseName("ix_personal_messages_author_id");

                    b.HasIndex("RecipientId")
                        .HasDatabaseName("ix_personal_messages_recipient_id");

                    b.ToTable("personal_messages");
                });

            modelBuilder.Entity("WebChatApi.Domain.Dbos.ChannelDbo", b =>
                {
                    b.HasOne("UserDbo", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_channels_users_creator_id");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("WebChatApi.Domain.Dbos.ChannelMessageDbo", b =>
                {
                    b.HasOne("UserDbo", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_channel_messages_users_author_id");

                    b.HasOne("WebChatApi.Domain.Dbos.ChannelDbo", "Channel")
                        .WithMany("Messages")
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_channel_messages_channels_channel_id");

                    b.Navigation("Author");

                    b.Navigation("Channel");
                });

            modelBuilder.Entity("WebChatApi.Domain.Dbos.ChannelUserDbo", b =>
                {
                    b.HasOne("WebChatApi.Domain.Dbos.ChannelDbo", "Channel")
                        .WithMany("Members")
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_channel_users_channels_channel_id");

                    b.HasOne("UserDbo", "User")
                        .WithMany("ChannelsMember")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_channel_users_users_user_id");

                    b.Navigation("Channel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebChatApi.Domain.Dbos.GroupChatDbo", b =>
                {
                    b.HasOne("UserDbo", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_group_chats_users_creator_id");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("WebChatApi.Domain.Dbos.GroupChatMessageDbo", b =>
                {
                    b.HasOne("UserDbo", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_group_chat_messages_users_author_id");

                    b.HasOne("WebChatApi.Domain.Dbos.GroupChatDbo", "GroupChat")
                        .WithMany("Messages")
                        .HasForeignKey("GroupChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_group_chat_messages_group_chats_group_chat_id");

                    b.Navigation("Author");

                    b.Navigation("GroupChat");
                });

            modelBuilder.Entity("WebChatApi.Domain.Dbos.GroupChatUserDbo", b =>
                {
                    b.HasOne("WebChatApi.Domain.Dbos.GroupChatDbo", "GroupChat")
                        .WithMany("Members")
                        .HasForeignKey("GroupChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_group_chat_users_group_chats_group_chat_id");

                    b.HasOne("UserDbo", "User")
                        .WithMany("GroupChatsMember")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_group_chat_users_users_user_id");

                    b.Navigation("GroupChat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebChatApi.Domain.Dbos.PersonalMessageDbo", b =>
                {
                    b.HasOne("UserDbo", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_personal_messages_users_author_id");

                    b.HasOne("UserDbo", "Recipient")
                        .WithMany()
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_personal_messages_users_recipient_id");

                    b.Navigation("Author");

                    b.Navigation("Recipient");
                });

            modelBuilder.Entity("UserDbo", b =>
                {
                    b.Navigation("ChannelsMember");

                    b.Navigation("GroupChatsMember");
                });

            modelBuilder.Entity("WebChatApi.Domain.Dbos.ChannelDbo", b =>
                {
                    b.Navigation("Members");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("WebChatApi.Domain.Dbos.GroupChatDbo", b =>
                {
                    b.Navigation("Members");

                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
